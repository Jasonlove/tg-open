<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jinkuangkj.open.mapper.ActOrderDao">
    <resultMap id="BaseResultMap" type="com.jinkuangkj.open.model.ActOrder">
        <constructor>
            <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
            <arg column="act_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
            <arg column="user_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
            <arg column="act_name" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="merchant" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="iphone" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="amount" javaType="java.lang.Double" jdbcType="DOUBLE" />
            <arg column="trade_no" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="out_trade_no" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="status" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
            <arg column="finish_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
            <arg column="merchant_id" javaType="java.lang.String" jdbcType="VARCHAR" />
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
        id, act_id, user_id, act_name, merchant, name, iphone, amount, trade_no, out_trade_no, 
        status, create_time, finish_time, merchant_id
    </sql>
    <select id="selectById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select 
        <include refid="Base_Column_List" />
        from t_order
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteById" parameterType="java.lang.Integer">
        delete from t_order
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.jinkuangkj.open.model.ActOrder">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into t_order (act_id, user_id, act_name, 
            merchant, name, iphone, 
            amount, trade_no, out_trade_no, 
            status, create_time, finish_time, 
            merchant_id)
        values (#{actId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{actName,jdbcType=VARCHAR}, 
            #{merchant,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{iphone,jdbcType=VARCHAR}, 
            #{amount,jdbcType=DOUBLE}, #{tradeNo,jdbcType=VARCHAR}, #{outTradeNo,jdbcType=VARCHAR}, 
            #{status,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{finishTime,jdbcType=TIMESTAMP}, 
            #{merchantId,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.jinkuangkj.open.model.ActOrder">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into t_order
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="actId != null">
                act_id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="actName != null">
                act_name,
            </if>
            <if test="merchant != null">
                merchant,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="iphone != null">
                iphone,
            </if>
            <if test="amount != null">
                amount,
            </if>
            <if test="tradeNo != null">
                trade_no,
            </if>
            <if test="outTradeNo != null">
                out_trade_no,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="finishTime != null">
                finish_time,
            </if>
            <if test="merchantId != null">
                merchant_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="actId != null">
                #{actId,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="actName != null">
                #{actName,jdbcType=VARCHAR},
            </if>
            <if test="merchant != null">
                #{merchant,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="iphone != null">
                #{iphone,jdbcType=VARCHAR},
            </if>
            <if test="amount != null">
                #{amount,jdbcType=DOUBLE},
            </if>
            <if test="tradeNo != null">
                #{tradeNo,jdbcType=VARCHAR},
            </if>
            <if test="outTradeNo != null">
                #{outTradeNo,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="finishTime != null">
                #{finishTime,jdbcType=TIMESTAMP},
            </if>
            <if test="merchantId != null">
                #{merchantId,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateSelective" parameterType="com.jinkuangkj.open.model.ActOrder">
        update t_order
        <set>
            <if test="actId != null">
                act_id = #{actId,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="actName != null">
                act_name = #{actName,jdbcType=VARCHAR},
            </if>
            <if test="merchant != null">
                merchant = #{merchant,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="iphone != null">
                iphone = #{iphone,jdbcType=VARCHAR},
            </if>
            <if test="amount != null">
                amount = #{amount,jdbcType=DOUBLE},
            </if>
            <if test="tradeNo != null">
                trade_no = #{tradeNo,jdbcType=VARCHAR},
            </if>
            <if test="outTradeNo != null">
                out_trade_no = #{outTradeNo,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="finishTime != null">
                finish_time = #{finishTime,jdbcType=TIMESTAMP},
            </if>
            <if test="merchantId != null">
                merchant_id = #{merchantId,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateById" parameterType="com.jinkuangkj.open.model.ActOrder">
        update t_order
        set act_id = #{actId,jdbcType=INTEGER},
            user_id = #{userId,jdbcType=INTEGER},
            act_name = #{actName,jdbcType=VARCHAR},
            merchant = #{merchant,jdbcType=VARCHAR},
            name = #{name,jdbcType=VARCHAR},
            iphone = #{iphone,jdbcType=VARCHAR},
            amount = #{amount,jdbcType=DOUBLE},
            trade_no = #{tradeNo,jdbcType=VARCHAR},
            out_trade_no = #{outTradeNo,jdbcType=VARCHAR},
            status = #{status,jdbcType=VARCHAR},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            finish_time = #{finishTime,jdbcType=TIMESTAMP},
            merchant_id = #{merchantId,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
    
    <select id="selectByTradeNo" parameterType="java.lang.String" resultMap="BaseResultMap">
        select 
        <include refid="Base_Column_List" />
        from t_order
        where trade_no = #{tradeNo,jdbcType=VARCHAR}
    </select>
    
    
    <resultMap id="OrderResultMap" type="com.jinkuangkj.open.model.result.OrderResult">
        <constructor>
            <arg column="userId" javaType="java.lang.Integer" jdbcType="INTEGER" />
            <arg column="nickname" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="headimgurl" javaType="java.lang.String" jdbcType="VARCHAR" />
            
            <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="iphone" javaType="java.lang.String" jdbcType="VARCHAR" />
            
            <arg column="tradeNo" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="finishTime" javaType="java.util.Date" jdbcType="TIMESTAMP" />
            <arg column="amount" javaType="java.lang.Double" jdbcType="DOUBLE" />
        </constructor>
    </resultMap>
    
    
    <select id="getListOrder" resultMap="OrderResultMap">
		SELECT 
		u.nickname,
		u.headimgurl,
		o.user_id userId,
		o.`name`,
		o.iphone,
		o.finish_time finishTime,
		o.trade_no tradeNo,
		o.amount
		from t_order o join t_user u on o.user_id = u.id
		where o.`status` = 'success' order by o.id DESC
    </select>
    
    
    <select id="countByStatus" resultType="java.lang.Integer">
		select 
		count(id) 
		from t_order where `status` = 'success'
    </select>
    
</mapper>