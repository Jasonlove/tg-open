<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jinkuangkj.open.mapper.AuthDao">
    <resultMap id="BaseResultMap" type="com.jinkuangkj.open.model.Auth">
        <constructor>
            <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
            <arg column="type" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="desc" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="url" javaType="java.lang.String" jdbcType="VARCHAR" />
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
        id, type, name, desc, url
    </sql>
    <select id="selectById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select 
        <include refid="Base_Column_List" />
        from t_auth
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteById" parameterType="java.lang.Integer">
        delete from t_auth
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.jinkuangkj.open.model.Auth">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into t_auth (type, name, desc, 
            url)
        values (#{type,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{desc,jdbcType=VARCHAR}, 
            #{url,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.jinkuangkj.open.model.Auth">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into t_auth
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="type != null">
                type,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="desc != null">
                desc,
            </if>
            <if test="url != null">
                url,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="type != null">
                #{type,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="desc != null">
                #{desc,jdbcType=VARCHAR},
            </if>
            <if test="url != null">
                #{url,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateSelective" parameterType="com.jinkuangkj.open.model.Auth">
        update t_auth
        <set>
            <if test="type != null">
                type = #{type,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="desc != null">
                desc = #{desc,jdbcType=VARCHAR},
            </if>
            <if test="url != null">
                url = #{url,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateById" parameterType="com.jinkuangkj.open.model.Auth">
        update t_auth
        set type = #{type,jdbcType=VARCHAR},
            name = #{name,jdbcType=VARCHAR},
            desc = #{desc,jdbcType=VARCHAR},
            url = #{url,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
    
    <select id="listByRoleId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    	select a.* 
		from t_role_auth ra 
		join t_auth a on ra.auth_id = a.id
		where ra.role_id = #{roleId}
		ORDER BY id ASC
    </select>
</mapper>